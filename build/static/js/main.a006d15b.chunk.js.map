{"version":3,"sources":["components/Header.js","components/Character.js","components/CharacterContainer.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Header","currentPage","className","Character","character","useContext","FavouritesContext","characterFavourites","setCharacterFavourites","imageSrc","imageUrl","substring","indexOf","name","onClick","characterId","characterName","characterImageUrl","newFavourtite","_id","some","item","updatedFavourites","filter","id","toggleFavouriteForCharacter","src","alt","CharacterContainer","characters","rows","cols","forEach","index","push","length","buildRows","Navigation","setCurrentPage","currentStateButton","setCurrenStateButton","React","createContext","App","useState","setCharacters","getCharacters","pageNumber","a","axios","get","apiResponse","data","useEffect","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a006d15b.chunk.js","sourcesContent":["function Header({ currentPage }) {\r\n  return (\r\n    <header className=\"header__container\">\r\n      <h1 className=\"header__title\">The World of Disney</h1>\r\n      <p className=\"header__page-count \">Page: {currentPage}</p>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useContext } from 'react';\r\nimport { FavouritesContext } from '../App';\r\n\r\nfunction Character({ character }) {\r\n\r\n  const { characterFavourites, setCharacterFavourites } = useContext(FavouritesContext);\r\n\r\n  let imageSrc = \"https://picsum.photos/300/200/?blur\";\r\n  if (character.imageUrl) {\r\n    imageSrc = character.imageUrl.substring(\r\n      0,\r\n      character.imageUrl.indexOf(\"/revision\")\r\n    );\r\n  }\r\n\r\n  function toggleFavouriteForCharacter(characterId, characterName, characterImageUrl ) {\r\n    const newFavourtite = {\r\n      _id: characterId,\r\n      name: characterName,\r\n      imageUrl: characterImageUrl,\r\n    }\r\n    \r\n    if (!characterFavourites.some(item => item._id === newFavourtite._id )) {\r\n      setCharacterFavourites([...characterFavourites, newFavourtite]);\r\n    } else {\r\n      const updatedFavourites = characterFavourites.filter((id) => id._id !== newFavourtite._id );\r\n      setCharacterFavourites(updatedFavourites);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <article className=\"character-item\">\r\n      <h2>{character.name}</h2>\r\n\r\n      <div\r\n        className=\"character-item__actions\"\r\n        onClick={() => toggleFavouriteForCharacter(character._id, character.name, character.imageUrl)}\r\n      >\r\n        {\r\n        !characterFavourites.some(item => item._id === character._id )\r\n          ? \"Add to Favourites\"\r\n          : \"Favourited\"\r\n        }\r\n      </div>\r\n\r\n      <img\r\n        className=\"character-item__img\"\r\n        src={imageSrc}\r\n        alt={character.name}\r\n      />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Character;\r\n","import Character from \"./Character\";\r\n\r\nfunction CharacterContainer({ characters }) {\r\n\r\n  const buildRows = () => {\r\n    let rows = [],  cols = [];\r\n    characters.forEach((character, index) => {\r\n      cols.push(\r\n        <Character key={character._id} \r\n                    character={character}\r\n        />\r\n      );\r\n      if ((index + 1) % 5 === 0) {\r\n        rows.push(\r\n          <div className=\"character-row\" key={index}>\r\n            {cols}\r\n          </div>\r\n        );\r\n        cols = [];\r\n      }\r\n    });\r\n\r\n    // Final remaining cols\r\n    if (cols.length > 0) {\r\n      rows.push(\r\n        <div className=\"character-row\" key={characters.length}>\r\n          {cols}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <div className=\"character-container\">\r\n      {buildRows()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterContainer;\r\n","function Navigation({\r\n  currentPage,\r\n  setCurrentPage,\r\n  currentStateButton,\r\n  setCurrenStateButton,\r\n}) {\r\n  const nextPage = () => {\r\n    const newPageNumber = currentPage + 1;\r\n    setCurrentPage(newPageNumber);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      const newPageNumber = currentPage - 1;\r\n      setCurrentPage(newPageNumber);\r\n    }\r\n  };\r\n\r\n  const showFavourites = () => {\r\n      \r\n    // const currentText = document.getElementById(\"buttonShowFavourites\").innerHTML;\r\n    //   currentText === \"Show All\"\r\n    //   ? (document.getElementById(\"buttonShowFavourites\").innerHTML =\r\n    //   \"Show Favourites\")\r\n    //   : (document.getElementById(\"buttonShowFavourites\").innerHTML =\r\n    //   \"Show All\");\r\n      \r\n    currentStateButton === \"ShowAll\"\r\n        ? (currentStateButton = \"ShowFavourites\")\r\n        : (currentStateButton = \"ShowAll\");\r\n    setCurrenStateButton(currentStateButton);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"navigation__item\">\r\n        <button className=\"navigation__button\" onClick={prevPage}>\r\n          Prev Page\r\n        </button>\r\n      </div>\r\n      <div className=\"navigation__item\">\r\n        <button\r\n          className=\"navigation__button\"\r\n          id=\"buttonShowFavourites\"\r\n          onClick={showFavourites}\r\n        >\r\n          {/* Show Favourites */}\r\n        {\r\n        currentStateButton === \"ShowFavourites\"\r\n          ? \"Show All\"\r\n          : \"Show Favourites\"\r\n        }\r\n        </button>\r\n      </div>\r\n      <div className=\"navigation__item\">\r\n        <button className=\"navigation__button\" onClick={nextPage}>\r\n          Next Page\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport CharacterContainer from \"./components/CharacterContainer\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport axios from \"axios\";\r\n\r\nexport const FavouritesContext = React.createContext();\r\n\r\nfunction App() {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [characterFavourites, setCharacterFavourites] = useState([]);\r\n  const [currentStateButton, setCurrenStateButton] = useState(\"ShowAll\");\r\n\r\n  const getCharacters = async (pageNumber) => {\r\n    const apiResponse = await axios.get(\r\n      `http://api.disneyapi.dev/characters?page=${pageNumber}`\r\n    );\r\n    setCharacters(apiResponse.data.data);\r\n  };\r\n\r\n  const getFavouritesCharacters = () => {\r\n    setCharacters(characterFavourites);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentStateButton === \"ShowAll\"\r\n      ? getCharacters(currentPage)\r\n      : getFavouritesCharacters();\r\n  }, [currentPage, currentStateButton]);\r\n\r\n  return (\r\n    <FavouritesContext.Provider\r\n      value={{ characterFavourites, setCharacterFavourites }}\r\n    >\r\n      <div className=\"page\">\r\n        <Header currentPage={currentPage} />\r\n        <Navigation\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          currentStateButton={currentStateButton}\r\n          setCurrenStateButton={setCurrenStateButton}\r\n        />\r\n        <CharacterContainer characters={characters} />\r\n      </div>\r\n    </FavouritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}